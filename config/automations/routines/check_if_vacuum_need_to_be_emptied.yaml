---
# FR: Vérifie si l'aspirateur à besoin d'être vidé
# EN: Check vacuum need to be emptied
#
# FR: Si oui, envoie un rappel sur Telegram demandant de confirmer la réalisation.
#     Il y a la possibilté de repousser de 30 minutes ou d'annuler.
# EN: If yes send a reminder on telegram asking to confirm it's done.
#     we can postponed in 30 minutes or cancel.

# Main automation checking the state of the vacuum
- alias: "Rappeler de vider Rocky le soir"
  description: "Envoie une notification pour vider le réservoire de Rocky."
  id: e602d1dd-2c63-4427-a851-8fe054cfa554
  trigger:
    - platform: time
      at: "20:00:00"
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.redemande_vider_rocky
  action:
    - service: notify.telegram
      data:
        data:
          inline_keyboard:
            - Oui:/resetRocky, Redemande:/redemandeRocky, Demain:/demainRocky
        message: >
          Rocky a été utilisé aujourd'hui et le bac n'a pas été vidé depuis
          {{ state_attr('vacuum.rocky', 'cleaning_count') | int - states('variable.nb_cleaning_last_dust_bin_emptied')
          | int }} nettoyages ({{state_attr('vacuum.rocky','total_cleaned_area')
          | int - state_attr('variable.nb_cleaning_last_dust_bin_emptied','area')| int }}
          m²). Il a besoin que l'on vide son bac. Est-ce déjà fait ?

  condition:
    - condition: state
      entity_id: input_boolean.vacuum_need_to_be_emptied
      state: "on"

# Command received by Telegram to ask again in 30 minutes
- alias: "Redemande dans 30 minutes"
  description: "Renvoie une notification au bout de 30 minutes."
  id: 3cf025ba-0bd7-4e09-8803-300ff1b8f826
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /redemandeRocky
  action:
    - service: timer.start
      entity_id: timer.redemande_vider_rocky
    - service: telegram_bot.edit_message
      data:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.user_id }}"
        message: "OK je te redemande dans 30 minutes"

# Command received by telegram to not ask again today
- alias: "Arrete de redemander aujourd'hui"
  description: "Annule le rappel pour aujourd'hui."
  id: 206e0c29-b8e5-4ba0-88f0-ae81abc69bc4
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /demainRocky
  action:
    - service: telegram_bot.answer_callback_query
      data:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Tu as dis pas aujourd'hui"
    - service: telegram_bot.edit_message
      data:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.user_id }}"
        message: "OK on en reparle demain"

# Command received by Telegram to confirm vacuum emptied
- alias: "Bac du Rocky vidé"
  description: "Enregistre que le bac de Rocky a été vidé."
  id: ce0cb386-7907-4991-af99-147b9346c771
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /resetRocky
  action:
    - service: telegram_bot.answer_callback_query
      data:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: OK merci
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.vacuum_need_to_be_emptied
    - service: telegram_bot.edit_message
      data:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.user_id }}"
        message: "Rocky est pret pour le prochain netoyage"
    - service: variable.set_variable
      data:
        variable: nb_cleaning_last_dust_bin_emptied
        value: "{{ state_attr('vacuum.rocky', 'cleaning_count') }}"
        attributes:
          time: "{{ state_attr('vacuum.rocky', 'total_cleaning_time') }}"
          area: "{{ state_attr('vacuum.rocky', 'total_cleaned_area') }}"
