---
# E: Send Telegram notification when wheather alert is raised.
# F: Envoie une notification Telegram quand une alerte météo est en cours.
#
# Exemple / Example:
# ------------------------------
# Alerte météo Orange en cours:
# - Orages: Jaune
# - Canicule: Orange
#
- alias: "Send notification when weather alert is raised"
  trigger:
    - platform: state
      entity_id: sensor.home_weather_alert
  condition:
    # F: Envoie la notification seulement si une alerte est en cours ( State != Vert et != unvailable)
    # E: Send a notification only if a weather alert is active ( State != Vert et != unvailable)
    - condition: template
      value_template: "{% if (is_state('sensor.home_weather_alert', 'Vert') or is_state('sensor.home_weather_alert', 'unavailable') )  %}false{% else %}true{% endif %}"
  action:
    - service: notify.telegram
      data_template:
        message: "Alerte météo {{states('sensor.home_weather_alert')}} en cours:\n
          {%- for attr in ['Vent violent', 'Pluie-inondation', 'Orages', 'Inondation', 'Neige-verglas',
                          'Canicule', 'Grand-froid', 'Avalanches', 'Vagues-submersion'] -%}
          {%- if state_attr('sensor.home_weather_alert', attr) != 'Vert' and state_attr('sensor.home_weather_alert', attr) != None %}\n
          - {{attr}}: {{state_attr('sensor.home_weather_alert', attr)}}
          {%- endif -%}
          {%- endfor -%}"

- alias: "Send notification when weather alert ends"
  trigger:
    - platform: state
      entity_id: sensor.home_weather_alert
      to: "Vert"
  condition:
    # F: Vérfie que l'état n'est pas revenue à 'Vert' après que l'entity était non disponible.
    # E: Check if state is back to 'Vert' after entity was unvailable.
    - platfrom: template
      value_template: "{% if trigger.from_state.state != 'unavailable' %}true{% endif %}"
  action:
    - service: notify.telegram
      data_template:
        message: "Fin de l'alerte météo."
